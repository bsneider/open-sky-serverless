---
swagger: "2.0"
info:
  version: "2021-02-15T22:05:16Z"
  title: "opensky"
host: "i0kevfmkc8.execute-api.${region}.amazonaws.com"
basePath: "/beta"
schemes:
  - "https"
paths:
  /events:
    options:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "when_no_match"
        type: "mock"
    x-amazon-apigateway-any-method:
      produces:
        - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        uri: ${report_invoke_arn}
        httpMethod: "GET"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"

  /etl:
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri: ${etl_invoke_arn}
        httpMethod: "POST"
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: '{"field": "value", "action": "GET"}'
        passthroughBehavior: "when_no_templates"
        contentHandling: "CONVERT_TO_TEXT"
  /scrape:
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
        "500":
          description: "500 response"
        "404":
          description: "404 response"
      x-amazon-apigateway-integration:
        type: "aws"
        uri: ${scrape_invoke_arn}
        httpMethod: "POST"
        responses:
          default:
            statusCode: "200"
          ".*(Unknown|stackTrace).*":
            statusCode: "500"
          ".*Not Found.*":
            statusCode: "404"
            responseTemplates:
              application/json: '{"output_value": "not found"}'
        requestTemplates:
          application/json: '{"field": "value", "action": "GET"}'
        passthroughBehavior: "when_no_templates"

definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
